{"version":3,"file":"commonHelpers.js","sources":["../src/js/pixabay-api.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '43847470-26a4b647964be33653231b3f4';\nconst BASE_URL = 'https://pixabay.com/api/';\nconst PER_PAGE = 15;\nlet picPage = 1;\n\n// export const findPhotoByRequst = q => {\n//   const serchParams = new URLSearchParams({\n//     key: API_KEY,\n//     q,\n//     image_type: 'all',\n//     orientation: 'horizontal',\n//     safesearch: true,\n//   });\n\n//   return fetch(`${BASE_URL}?${serchParams}`).then(response => {\n//     if (!response.ok) {\n//       throw new Error(response.statusText);\n//     }\n\n//     return response.json();\n//   });\n// };\n\n// Optionally the request above could also be done as\n\n// Want to use async/await? Add the `async` keyword to your outer function/method.\nexport async function getPictures(q) {\n  try {\n    const response = await axios.get(BASE_URL, {\n      params: {\n        key: API_KEY,\n        q,\n        image_type: 'all',\n        orientation: 'horizontal',\n        safesearch: true,\n        page: picPage,\n        per_page: PER_PAGE,\n      },\n    });\nconst imagesData = response.data.hits;\n    console.log(imagesData);\n  } catch (error) {\n    console.log(error);\n  }\n}\n","// import { findPhotoByRequst } from './js/pixabay-api.js';\nimport { createGalleryItemMarcup } from './js/render-functions.js';\nimport { getPictures } from './js/pixabay-api.js';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst searchFormEl = document.querySelector('.search-form');\nconst galleryEl = document.querySelector('.js-gallery');\nconst loaderEl = document.querySelector('.js-loader');\n\nsearchFormEl.reset();\n\nfunction onSearchFormSubmit(event) {\n  event.preventDefault();\n  const searchReqest = event.target.elements.searchQuery.value.trim();\n  galleryEl.innerHTML = '';\n\n    if (!searchReqest) {\n      return iziToast.info({\n        message: 'The search field must not be empty',\n        position: 'topCenter',\n        timeout: 2500,\n      });\n    }\n\n  // loaderEl.classList.remove('is-hidden');\n\n  // findPhotoByRequst(searchReqest)\n  // .then(imagesData => {\n  //     if (imagesData.total === 0) {\n  //       iziToast.error({\n  //         message:\n  //           'Sorry, there are no images matching your search query. Please try again!',\n  //         position: 'topRight',\n  //         color: 'red',\n  //       });\n  //     }\n\n\n  //     galleryEl.innerHTML = createGalleryItemMarcup(imagesData.hits);\n  //     new SimpleLightbox('.js-gallery a', {\n  //       captionsData: 'alt',\n  //       captionDelay: '250',\n  //     });\n  //   })\n  //   .catch(error => console.log(error))\n  //   .finally(() =>  {\n  //     event.target.reset();\n  //     loaderEl.classList.add('is-hidden');\n  //   });\n  getPictures(searchReqest);\n}\n\nsearchFormEl.addEventListener('submit', onSearchFormSubmit);\n"],"names":["API_KEY","BASE_URL","PER_PAGE","picPage","getPictures","q","imagesData","axios","error","searchFormEl","galleryEl","onSearchFormSubmit","event","searchReqest","iziToast"],"mappings":"wvBAEA,MAAMA,EAAU,qCACVC,EAAW,2BACXC,EAAW,GACjB,IAAIC,EAAU,EAuBP,eAAeC,EAAYC,EAAG,CACnC,GAAI,CAYN,MAAMC,GAXe,MAAMC,EAAM,IAAIN,EAAU,CACzC,OAAQ,CACN,IAAKD,EACL,EAAAK,EACA,WAAY,MACZ,YAAa,aACb,WAAY,GACZ,KAAMF,EACN,SAAUD,CACX,CACP,CAAK,GACuB,KAAK,KAC7B,QAAQ,IAAII,CAAU,CACvB,OAAQE,EAAO,CACd,QAAQ,IAAIA,CAAK,CAClB,CACH,CCpCA,MAAMC,EAAe,SAAS,cAAc,cAAc,EACpDC,EAAY,SAAS,cAAc,aAAa,EACrC,SAAS,cAAc,YAAY,EAEpDD,EAAa,MAAK,EAElB,SAASE,EAAmBC,EAAO,CACjCA,EAAM,eAAc,EACpB,MAAMC,EAAeD,EAAM,OAAO,SAAS,YAAY,MAAM,OAG3D,GAFFF,EAAU,UAAY,GAEhB,CAACG,EACH,OAAOC,EAAS,KAAK,CACnB,QAAS,qCACT,SAAU,YACV,QAAS,IACjB,CAAO,EA4BLV,EAAYS,CAAY,CAC1B,CAEAJ,EAAa,iBAAiB,SAAUE,CAAkB"}